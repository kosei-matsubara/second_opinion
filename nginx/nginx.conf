user  nginx;

# ワーカープロセス数（CPUコア数に合わせる）を設定する
worker_processes  auto;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

# 同時接続数を設定する
events {
    worker_connections 1024;
}

http {
  upstream myapp {
    # ソケット通信のためpuma.sockを指定する
    server unix:///myapp/tmp/sockets/puma.sock;
  }

  server {
    listen 80;
    # ドメインもしくはIPを設定する
    server_name localhost;

    access_log /var/log/nginx/access.log;
    error_log  /var/log/nginx/error.log;

    #  Railsのpublicディレクトリを静的ファイルのドキュメントルートに設定する
    root /myapp/public;

    # 各タイムアウトを設定する
    proxy_connect_timeout 60;
    proxy_read_timeout    60;
    proxy_send_timeout    60;

    # クライアントリクエストの最大ボディサイズを設定する
    client_max_body_size 500m;

    # クライアントとの接続時間を設定する
    keepalive_timeout 60;

    error_page 404             /404.html;
    error_page 505 502 503 504 /500.html;

    # ヘルスチェックのためエンドポイントを設定する
    location /healthcheck {
      root   /usr/share/nginx/html;
      empty_gif;
      break;
    }

    # 静的ファイルを優先してレスポンスして、動的リクエストをPumaに転送する
    location / {
      try_files $uri @myapp;
    }

    # リバースプロキシについて設定する
    location @myapp {
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header Host $http_host;
      proxy_pass http://myapp;
    }
  }
}
